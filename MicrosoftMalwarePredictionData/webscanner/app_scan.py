import os

class ApplicationScan:

    APPLICATIONS = ["postgres", "mongod", "OS", "MicrosoftOffice",]
    # postgres: https://www.postgresql.org/support/security/
    # mongo: https://www.mongodb.com/alerts

    def __init__(self):
        pass

    def OS_scan(self):
        """
        Performs an OS scan retrieving information including the OS version details.
        Returns (tuple):
            A key, value tuple, key = successful command, value = result of the successful command
            eg: ('sw_vers', ['ProductName:', 'Mac', 'OS', 'X', 'ProductVersion:', '10.14.6', 'BuildVersion:', '18G95'])
        """
        commands = ["lsb_release -a", "sw_vers", "systeminfo"] #[linux, mac, windows]
        scan_results = {}
        for command in commands:
            try:
                process = os.popen(command)
                scan_output = str(process.read())
                scan_results[command] = scan_output
            except:
                scan_results["Error"] = "Unable to detect OS version"

        for key, value in scan_results.items():
            if scan_results[key]:
                return key, scan_results[key].split()
        return "Error", scan_results["Error"]
    
    def postgres_scan(self):
        """
        Scans for the postgres version number
        Returns (string):
            The postgres version else None if not installed. eg: postgres (PostgreSQL) 12.2
        """
        command = "postgres --version"
        process = os.popen(command)
        scan_output = str(process.read())[:-1] #Removes the new line
        if scan_output:
            return scan_output
        return None

    def mongo_scan(self):
        """
        Scans for the mongo version number
        Returns (string):
            The mongo version else None if not installed.
        """
        command = "mongod --version"
        process = os.popen(command)
        scan_output = str(process.read())
        if scan_output:
            return scan_output
        return None
    
    def msoffice_scan(self):
        """
        Scans for MS office suit versions
        Returns (dict):
            MS office product name: version number. eg: {'Word': '16.37', 'Excel': '16.37', 'Powerpoint': '16.37', 'OneNote': '16.37', 'Outlook': '16.37'}

        NOTE: This has only been tested on a Mac, assuming the saved paths is in /Applications/Microsoft
        """
        office_apps = ["Word", "Excel", "Powerpoint", "OneNote", "Outlook"]
        scan_results = {}
        for office_app in office_apps:
            command = "mdls -name kMDItemVersion /Applications/Microsoft\ " + office_app + ".app -raw"
            print(command)
            process = os.popen(command)
            scan_results[office_app] = str(process.read())
        return scan_results

    
apps = ApplicationScan()
print(apps.msoffice_scan())
